//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quintity.TestFramework.Scratch.QueryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.report.smartstream.cognosante.com", ConfigurationName="QueryService.QueryService")]
    public interface QueryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RowBean))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSpagoDatasetReturn")]
        Quintity.TestFramework.Scratch.QueryService.RowBean[] getSpagoDataset(string userId, string password, string datasetName, string parameters, bool headers);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSpagoDatasetReturn")]
        System.Threading.Tasks.Task<Quintity.TestFramework.Scratch.QueryService.RowBean[]> getSpagoDatasetAsync(string userId, string password, string datasetName, string parameters, bool headers);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RowBean))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getTxDataForXCelsiusReturn")]
        Quintity.TestFramework.Scratch.QueryService.RowBean[] getTxDataForXCelsius(string userId, string password, string queryText, string parameters, int startRow, int numberOfRows, bool headers);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getTxDataForXCelsiusReturn")]
        System.Threading.Tasks.Task<Quintity.TestFramework.Scratch.QueryService.RowBean[]> getTxDataForXCelsiusAsync(string userId, string password, string queryText, string parameters, int startRow, int numberOfRows, bool headers);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://beans.report.smartstream.cognosante.com")]
    public partial class RowBean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string column01Field;
        
        private string column02Field;
        
        private string column03Field;
        
        private string column04Field;
        
        private string column05Field;
        
        private string column06Field;
        
        private string column07Field;
        
        private string column08Field;
        
        private string column09Field;
        
        private string column10Field;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column01 {
            get {
                return this.column01Field;
            }
            set {
                this.column01Field = value;
                this.RaisePropertyChanged("column01");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column02 {
            get {
                return this.column02Field;
            }
            set {
                this.column02Field = value;
                this.RaisePropertyChanged("column02");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column03 {
            get {
                return this.column03Field;
            }
            set {
                this.column03Field = value;
                this.RaisePropertyChanged("column03");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column04 {
            get {
                return this.column04Field;
            }
            set {
                this.column04Field = value;
                this.RaisePropertyChanged("column04");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column05 {
            get {
                return this.column05Field;
            }
            set {
                this.column05Field = value;
                this.RaisePropertyChanged("column05");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column06 {
            get {
                return this.column06Field;
            }
            set {
                this.column06Field = value;
                this.RaisePropertyChanged("column06");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column07 {
            get {
                return this.column07Field;
            }
            set {
                this.column07Field = value;
                this.RaisePropertyChanged("column07");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column08 {
            get {
                return this.column08Field;
            }
            set {
                this.column08Field = value;
                this.RaisePropertyChanged("column08");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column09 {
            get {
                return this.column09Field;
            }
            set {
                this.column09Field = value;
                this.RaisePropertyChanged("column09");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string column10 {
            get {
                return this.column10Field;
            }
            set {
                this.column10Field = value;
                this.RaisePropertyChanged("column10");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface QueryServiceChannel : Quintity.TestFramework.Scratch.QueryService.QueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryServiceClient : System.ServiceModel.ClientBase<Quintity.TestFramework.Scratch.QueryService.QueryService>, Quintity.TestFramework.Scratch.QueryService.QueryService {
        
        public QueryServiceClient() {
        }
        
        public QueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Quintity.TestFramework.Scratch.QueryService.RowBean[] getSpagoDataset(string userId, string password, string datasetName, string parameters, bool headers) {
            return base.Channel.getSpagoDataset(userId, password, datasetName, parameters, headers);
        }
        
        public System.Threading.Tasks.Task<Quintity.TestFramework.Scratch.QueryService.RowBean[]> getSpagoDatasetAsync(string userId, string password, string datasetName, string parameters, bool headers) {
            return base.Channel.getSpagoDatasetAsync(userId, password, datasetName, parameters, headers);
        }
        
        public Quintity.TestFramework.Scratch.QueryService.RowBean[] getTxDataForXCelsius(string userId, string password, string queryText, string parameters, int startRow, int numberOfRows, bool headers) {
            return base.Channel.getTxDataForXCelsius(userId, password, queryText, parameters, startRow, numberOfRows, headers);
        }
        
        public System.Threading.Tasks.Task<Quintity.TestFramework.Scratch.QueryService.RowBean[]> getTxDataForXCelsiusAsync(string userId, string password, string queryText, string parameters, int startRow, int numberOfRows, bool headers) {
            return base.Channel.getTxDataForXCelsiusAsync(userId, password, queryText, parameters, startRow, numberOfRows, headers);
        }
    }
}
